<?php

use PHPMailer\PHPMailer\Exception;
use Plivo\Exceptions\PlivoRestException;
use Plivo\RestClient;

defined('BASEPATH') or exit('No direct script access allowed');

require_once APPPATH . "vendor/autoload.php";

class TestController extends CI_Controller
{
	public function __construct()
	{
		parent::__construct();
	}

	public function pdf()
	{
		$this->load->library('pdflib/MakeDocket');
		$this->makedocket->init('P', 'mm', 'A4')->load('docket_1_digital')->generate();
	}

	public function csv()
	{
		$this->load->dbutil();

		$query = $this->db->query("SELECT * FROM users");
		$this->load->helper('file');

		$data = $this->dbutil->csv_from_result($query);
		if (!write_file('.\file.csv', $data, 'wb')) {
			echo 'Unable to write the file';
		} else {
			echo 'File written!';
		}
	}

	function mailer()
	{
		$this->load->library('email/GlobalMail');
		$mail = new GlobalMail(true);

		try {

			$mail->_init_();
			$mail->create_pool(['name' => 'LOT Awards', 'email' => 'noreply@leadersoftomorrow.co.in'], ['hemant@sociomark.in'], 'response@timesnetwork.in');
			$mail->data('Custom Subject', 'panel/emails/mail', null, 'This is the body in plain text for non-HTML mail clients');
			$mail->send();
			echo "Success!!!";
		} catch (Exception $th) {
			echo "Failed!! Mailer Error: {$mail->ErrorInfo}";
		}
	}

	public function send()
	{
		$this->config->load('brevo_email');
		$this->load->library('email/BrevoMail');
		$this->brevomail->init();

		$this->brevomail->from('response@timesnetwork.in', 'LOT Awards');
		$this->brevomail->to('hemant@sociomark.in');

		$this->brevomail->subject('Email Test');
		$this->brevomail->message('Testing the brevomail class.');

		if (!$this->brevomail->send()) {
			echo $this->brevomail->print_debugger();
		} else {
			echo "Success!";
		}
		$this->brevomail->clear(TRUE);
	}

	public function email_view()
	{
		$this->data['application'] = [
			'name' => 'Sociomark'
		];
		$this->load->view('panel/emails/participant_register_update', $this->data);
	}

	public function twiliosms()
	{
		$this->load->library('twilio/smsclient');
		$response = $this->smsclient->send();
		echo "<pre>";
		print_r($response->sid);
	}

	public function plivosms()
	{
		$plivo = new RestClient($authID, $authToken);
		echo "<pre>";
		try {
			$response = $plivo->messages->create(
				[
					"src" => "LOTSMS",
					"dst" => "+918689862375",
					"text"  => "Hello, from PHP Server!",
				]
			);
			print_r($response);
		} catch (PlivoRestException $e) {
			echo "Error! " . $e->getMessage();
		}
	}

	public function verify()
	{
		$code = $this->input->get('code');
		$number = $this->input->get('number');
		$this->load->library('twilio/smsclient');
		$response = $this->smsclient->verify($code, $number);
		echo "<pre>";
		print_r($response);
	}

	public function sendinblue()
	{
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$data = [
			"sender" =>  [
				"name" =>  "LOT Awards",
				"email" =>  "noreply@leadersoftomorrow.co.in"
			],
			"headers" =>  [
				"X-Sib-Sandbox" =>  "drop"
			],
			"to" =>  [
				[
					"email" =>  "hemant@sociomark.in",
					"name" =>  "Hemant Karekar"
				]
			],
			// "htmlContent" =>  "<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>",
			"textContent" =>  "Please confirm your email address by clicking on the link https://text.domain.com",
			"subject" =>  "Login Email confirmation"
		];
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://api.brevo.com/v3/smtp/email');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));

		$headers = array();
		$headers[] = 'Accept: application/json';
		$headers[] = 'Api-Key: ';
		$headers[] = 'Content-Type: application/json';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		if (curl_errno($ch)) {
			echo 'Error:' . curl_error($ch);
		} else {
			print_r($result);
		}
		curl_close($ch);
	}
}
